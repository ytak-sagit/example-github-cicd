name: Reusable Workflows
run-name: Reusable Workflows
on:
  workflow_call:  # Reusable Workflowsを起動するイベント
    inputs:
      pr-number:
        type: string
        default: ${{ github.event.pull_request.number }}
        required: false
        description: プルリクエスト番号
    secrets:
      token:
        required: true
        description: GitHubトークン
    outputs:
      message:
        value: ${{ jobs.comment.outputs.pr-comment }}
        description: 投稿メッセージ
jobs:
  comment:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    env:
      PR_NUMBER: ${{ inputs.pr-number }}
      PR_COMMENT: "Welcome, ${{ github.actor }}"
      GITHUB_TOKEN: ${{ secrets.token }}
    steps:
      - uses: actions/checkout@v4
      - name: Get PR comments
        id: get-pr-comments
        run: |    # PRのコメント一覧を取得
          comments=$(gh pr view --json comments "${PR_NUMBER}" | jq '.comments[] | .body')
          echo "comments=${comments}" >> "${GITHUB_OUTPUT}"
      - name: Check a comment already submitted
        id: check-pr-comment
        run: |    # メッセージがすでに投稿済か確認
          echo "${PR_COMMENTS[@]}" | grep -qw "${PR_COMMENT}"
        continue-on-error: true
        env:
          PR_COMMENTS: ${{ steps.get-pr-comments.outputs.comments }}
      - name: Submit a PR comment
        id: submit-pr-comment
        run: |
          gh pr comment "${PR_NUMBER}" --body "${PR_COMMENT}"
          echo "body=${body}" >> "${GITHUB_OUTPUT}"
        # NOTE: 前stepのコマンド実行時の終了コードが0以外(failure)であれば未投稿と判断し、コメント投稿stepを続行
        if: ${{ failure() && steps.check-pr-comment.outcome == 'failure' }}
    outputs:
      pr-comment: ${{ steps.submit-pr-comment.outputs.body }}
